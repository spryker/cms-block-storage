{% macro addProperty(property) %}
    /**
     * @var {{ property.type }}
     */
    protected ${{ property.name }};
{% endmacro %}

{% macro addConstructor(properties) %}
{% if properties %}
    public function __construct()
    {
{% for property, collectionType in properties %}
        $this->{{ property }} = new {{ collectionType }}();
{% endfor %}
    }
{% endif %}
{% endmacro %}

{%- macro addSet(method) %}
    /**
     * @param {{ method.var }} ${{ method.property }}
     *
     * @return $this
     */
    public function {{ method.name }}({% if method.typeHint %}{{ method.typeHint }} {% endif %}${{ method.property }})
    {
        $this->{{ method.property }} = ${{ method.property }};
        $this->addModifiedProperty('{{ method.property }}');

        return $this;
    }
{% endmacro -%}
{%- macro addGet(method) %}
    /**
     * @param bool $isRequired
     *
     * @return {{ method.return }}
     */
    public function {{ method.name }}($isRequired = false)
    {
        $this->assertIsRequired('{{ method.property }}', $isRequired);

        return $this->{{ method.property }};
    }
{% endmacro -%}
{%- macro addAdd(method) %}
    /**
     * @param {{ method.var }} ${{ method.property }}
     *
     * @return $this
     */
    public function {{ method.name }}({% if method.typeHint %}{{ method.typeHint }} {% endif %}${{ method.property }})
    {
        $this->{{ method.parent }}[] = ${{ method.property }};
        $this->addModifiedProperty('{{ method.parent }}');

        return $this;
    }
{% endmacro -%}
{%- macro addHas(method) %}
    /**
     * @param {{ method.var }} ${{ method.property }}
     *
     * @return bool
     */
    public function {{ method.name }}({% if method.typeHint %}{{ method.typeHint }} {% endif %}${{ method.property }})
    {
        return $this->{{ method.parent }}->has(${{ method.property }});
    }
{% endmacro -%}
{%- macro addRemove(method) %}
    /**
     * @param {{ method.var }} ${{ method.property }}
     *
     * @return $this
     */
    public function {{ method.name }}({% if method.typeHint %}{{ method.typeHint }} {% endif %}${{ method.property }})
    {
        $this->{{ method.parent }}->remove(${{ method.property }});
        $this->addModifiedProperty('{{ method.parent }}');

        return $this;
    }
{% endmacro -%}
