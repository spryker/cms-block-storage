<section class="spy-layout plain text-columns">
<h3>The Action Component</h3>

<p>
    The action <code>angularjs</code> component allows for asynchronous triggering of arbitrary actions on the server.
    To enable actions, load the module <code>spyAction</code> inside your <code>spy-app</code> declaration.
</p>

<h5>Markup</h5>

<p>Actions can be created using the directive <code>spy-action</code>.</p>

<pre><code class="html">&lt;any
    spy-action=&quot;/url/to/action&quot;
&gt;&lt;/any&gt;</code></pre>

<dl>
    <dt>spy-action</dt>
    <dd>The url of the server action.</dd>
</dl>

<h5>Scope methods</h5>

<dl>
    <dt>update()</dt>
    <dd>Triggers the action referenced by the <code>spy-action</code> attribute on the server and sends the supplied model.</dd>
    <dd>
        Emits an event that is catchable using the <code>spy-action-trigger</code> listener.
        Inside the listener the returned data is accessible by referencing <code>$argument</code>.
    </dd>
</dl>

<h5>Request</h5>
<p>Action requests are <code>POST</code> requests to the source referenced in the <code>spy-action</code> attribute of its markup.</p>

<h5>Response</h5>

<p>
   The action response is a JSON <code>Object</code> containing the response of the server.
</p>

<pre><code class="json">{
    &quot;content&quot; : {
        &hellip;
    }
}</code></pre>

<h5>Event Listeners</h5>

<p>
    The action component emits events accessible through the listeners <code>spy-action-trigger</code> and <code>spy-action-error</code>,
    which will be invoked after triggering the action on the server was either successful or failed.
</p>

<pre><code class="html">&lt;any
    spy-action-trigger|spy-action-error=&quot;&lt;expression&gt;&quot;
    scope=&quot;&lt;named scope&gt;&quot;
    channel=&quot;&lt;event-channel-1,event-channel-2,&hellip;&gt;&quot;
</code></pre>

<dl>
    <dt>scope</dt>
    <dd>The name of the view-unique named scope inside which to run <code>expression</code>.</dd>
    <dd>The <code>scope</code> attribute is optional. If missing, <code>expression</code> will run inside the local scope.</dd>

    <dt>channel</dt>
    <dd>Comma separated list of event channels.</dd>
    <dd>The <code>channels</code> attribute is optional. If missing, the listener will only react to events on the global channel.</dd>
</dl>

<h5>Example</h5>
<p>The template for this example can be found at <code>@UiExample/Partials/Action/index.twig</code>.</p>

</section>

<section class="spy-layout sparse">
    <div class="spy-layout buttons">
        <button
            class="button"
            ng-class="{ disabled : query }"
            spy-action="/uiexample/action/uiexample"
        >Click?</button>
    </div>
</section>