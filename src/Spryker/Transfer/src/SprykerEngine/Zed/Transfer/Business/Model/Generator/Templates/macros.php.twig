{% macro method_set(parameter) -%}
{% import _self as mcr %}
{%- if parameter.is_special == 1 -%}{{ mcr.method_set_header(parameter, 'array') }}{% else %}{{ mcr.method_set_header(parameter, parameter.parameterDataType) }}{%- endif %}
    {
        $this->{{ parameter.passedParameter }}{{ writeIf('[]', 'array', parameter.parameterDataType) }} = ${{ parameter.passedParameter }};
        $this->addModifiedProperty('{{ parameter.passedParameter }}');

        return $this;
    }
{%- if parameter.is_special == 1 %}

    /**
     * @var {{ writeIfNot(parameter.parameterDataType~' ', '(^string)', parameter.parameterDataType)|changeArrayType }}${{ parameter.passedParameter|singular }}
     */
    public function add{{ parameter.propertyName|singular|camelCase }}({{ writeIfNot(parameter.parameterDataType~' ', '(^string)', parameter.parameterDataType)|changeArrayType }}${{ parameter.passedParameter|singular }})
    {
        $this->{{ parameter.passedParameter }}->append(${{ parameter.passedParameter|singular }});
        $this->addModifiedProperty('{{ parameter.passedParameter }}');

        return $this;
    }
{%- endif -%}
{%- endmacro -%}


{% macro remove(property) %}

    /**
     * @var {{ writeIfNot(parameter.parameterDataType~' ', '(^string)', parameter.parameterDataType)|changeArrayType }}${{ parameter.passedParameter }}
     */
    public function remove{{ parameter.propertyName|singular|camelCase }}({{ writeIfNot(parameter.parameterDataType~' ', '(^string)', parameter.parameterDataType)|changeArrayType }}${{ parameter.passedParameter }})
    {
        $this->{{ parameter.passedParameter }} = new TransferArrayObject();
        $this->addModifiedProperty('{{ parameter.passedParameter }}');

        return $this;
    }
{% endmacro %}


{% macro method_set_header(parameter, type) %}

    /**
     * @var {{ writeIf('TransferArrayObject ', 'array', type) }}{{ writeIfNot(type~' ', '(boolean|bool|array|string|int)', type) }}${{ parameter.passedParameter }}
     *
     * @return $this
     */
    public function set{{ parameter.propertyName|camelCase }}({{ writeIf('TransferArrayObject ', 'array', type) }}{{ writeIfNot(type~' ', '(boolean|bool|array|string|int|null)', type) }}${{ parameter.passedParameter }})
{% endmacro %}


{% macro method_get(parameter) %}

    /**
     * @return {{ parameter.parameterDataType }}
     */
    public function get{{ parameter.propertyName|camelCase }}()
    {
        return $this->{{ parameter.passedParameter }};
    }
{% endmacro %}


{% macro write_property(prop) %}
    /**
     * @var {{ prop.parameterDataType }} ${{ prop.propertyName }}
     */
    private ${{ prop.propertyName }}{% if prop.defaultValue is defined and prop.defaultValue != '' %} = {{ prop.defaultValue|quotedIfNotIntegers }}{% endif %};
{% endmacro %}


{% macro build_constructor(parameters) %}
    /**
     *
     */
    public function __construct()
    {
    {% for property in parameters -%}
        {{ "\t" }}$this->{{ property }} = new TransferArrayObject();{{ "\n" }}
    {%- endfor %}
    }
{% endmacro %}
